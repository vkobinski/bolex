import '../chat_screen/widgets/chat_item_widget.dart';import 'bloc/chat_bloc.dart';import 'models/chat_item_model.dart';import 'models/chat_model.dart';import 'package:flutter/material.dart';import 'package:victor_kobinski_s_application2/core/app_export.dart';import 'package:victor_kobinski_s_application2/widgets/app_bar/appbar_image.dart';import 'package:victor_kobinski_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:victor_kobinski_s_application2/widgets/custom_text_form_field.dart';class ChatScreen extends StatelessWidget {const ChatScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<ChatBloc>(create: (context) => ChatBloc(ChatState(chatModelObj: ChatModel()))..add(ChatInitialEvent()), child: ChatScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: theme.colorScheme.onPrimaryContainer, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(73), leadingWidth: 41, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowrightBlueGray900, margin: getMargin(left: 17, top: 16, bottom: 15)), title: AppbarImage(height: getVerticalSize(18), width: getHorizontalSize(64), imagePath: ImageConstant.imgLogobolexpretavertical, margin: getMargin(left: 84)), actions: [Padding(padding: getPadding(left: 6, top: 14, right: 14), child: Text("lbl_chat".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeArialRoundedMTBoldErrorContainer.copyWith(letterSpacing: getHorizontalSize(0.92)))), AppbarImage(height: getVerticalSize(21), width: getHorizontalSize(22), imagePath: ImageConstant.imgFrame45, margin: getMargin(left: 83, top: 17, right: 34, bottom: 2))]), body: SizedBox(width: double.maxFinite, child: Container(width: getHorizontalSize(375), padding: getPadding(left: 20, top: 23, right: 20, bottom: 23), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<ChatBloc, ChatState, TextEditingController?>(selector: (state) => state.groupfourController, builder: (context, groupfourController) {return CustomTextFormField(controller: groupfourController, margin: getMargin(left: 43, right: 42), contentPadding: getPadding(top: 6, right: 30, bottom: 6), textStyle: CustomTextStyles.bodyMediumGray60001_1, hintText: "lbl_pesquisar".tr, hintStyle: CustomTextStyles.bodyMediumGray60001_1, prefix: Container(margin: getMargin(left: 5, top: 4, right: 10, bottom: 4), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(29)), filled: true, fillColor: appTheme.gray200, defaultBorderDecoration: TextFormFieldStyleHelper.fillGray200TL14, enabledBorderDecoration: TextFormFieldStyleHelper.fillGray200TL14, focusedBorderDecoration: TextFormFieldStyleHelper.fillGray200TL14, disabledBorderDecoration: TextFormFieldStyleHelper.fillGray200TL14);}), Expanded(child: Padding(padding: getPadding(top: 28), child: BlocSelector<ChatBloc, ChatState, ChatModel?>(selector: (state) => state.chatModelObj, builder: (context, chatModelObj) {return ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(18));}, itemCount: chatModelObj?.chatItemList.length ?? 0, itemBuilder: (context, index) {ChatItemModel model = chatModelObj?.chatItemList[index] ?? ChatItemModel(); return ChatItemWidget(model, onTapColumnname: () {onTapColumnname(context);});});})))]))))); } 
/// Navigates to the chatOneScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the chatOneScreen.
onTapColumnname(BuildContext context) { NavigatorService.pushNamed(AppRoutes.chatOneScreen, ); } 
 }

import '../emitir_seven_screen/widgets/emitir_seven_item_widget.dart';import 'bloc/emitir_seven_bloc.dart';import 'models/emitir_seven_item_model.dart';import 'models/emitir_seven_model.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:victor_kobinski_s_application2/core/app_export.dart';import 'package:victor_kobinski_s_application2/widgets/app_bar/appbar_image.dart';import 'package:victor_kobinski_s_application2/widgets/app_bar/appbar_subtitle_3.dart';import 'package:victor_kobinski_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:victor_kobinski_s_application2/widgets/custom_elevated_button.dart';class EmitirSevenScreen extends StatelessWidget {const EmitirSevenScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<EmitirSevenBloc>(create: (context) => EmitirSevenBloc(EmitirSevenState(emitirSevenModelObj: EmitirSevenModel()))..add(EmitirSevenInitialEvent()), child: EmitirSevenScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: theme.colorScheme.onErrorContainer, appBar: CustomAppBar(height: getVerticalSize(79), leadingWidth: 41, leading: AppbarImage(height: getVerticalSize(16), width: getHorizontalSize(9), svgPath: ImageConstant.imgArrowleftOnprimarycontainer, margin: getMargin(left: 32, top: 19, bottom: 20), onTap: () {onTapArrowleft53(context);}), centerTitle: true, title: AppbarSubtitle3(text: "lbl_nova_cobran_a".tr), actions: [AppbarImage(height: getVerticalSize(21), width: getHorizontalSize(22), imagePath: ImageConstant.imgFrame45, margin: getMargin(left: 23, top: 16, right: 23, bottom: 18))]), body: SizedBox(width: mediaQueryData.size.width, child: SingleChildScrollView(padding: getPadding(top: 15), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: getHorizontalSize(311), margin: getMargin(left: 16, right: 62), child: Text("msg_digite_o_valor_em".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.headlineMediumOnPrimaryContainer)), Padding(padding: getPadding(left: 16, top: 14), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_r_700_00".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.headlineMediumMontserratGray60002), Padding(padding: getPadding(top: 3), child: SizedBox(width: getHorizontalSize(222), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.gray50002)))])), CustomElevatedButton(text: "lbl_confirmar".tr, margin: getMargin(left: 23, top: 197, right: 24), buttonStyle: CustomButtonStyles.fillPrimaryTL6.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(double.maxFinite, getVerticalSize(52)))), buttonTextStyle: theme.textTheme.bodyLarge!, onTap: () {onTapConfirmar(context);}, alignment: Alignment.center), Container(margin: getMargin(top: 32), padding: getPadding(all: 6), decoration: AppDecoration.fill9, child: Column(crossAxisAlignment: CrossAxisAlignment.end, mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<EmitirSevenBloc, EmitirSevenState, EmitirSevenModel?>(selector: (state) => state.emitirSevenModelObj, builder: (context, emitirSevenModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(53), crossAxisCount: 3, mainAxisSpacing: getHorizontalSize(6), crossAxisSpacing: getHorizontalSize(6)), physics: NeverScrollableScrollPhysics(), itemCount: emitirSevenModelObj?.emitirSevenItemList.length ?? 0, itemBuilder: (context, index) {EmitirSevenItemModel model = emitirSevenModelObj?.emitirSevenItemList[index] ?? EmitirSevenItemModel(); return EmitirSevenItemWidget(model);});}), Padding(padding: getPadding(top: 8, right: 45, bottom: 82), child: Row(mainAxisAlignment: MainAxisAlignment.end, crossAxisAlignment: CrossAxisAlignment.start, children: [Container(padding: getPadding(left: 50, top: 6, right: 50, bottom: 6), decoration: BoxDecoration(borderRadius: BorderRadiusStyle.roundedBorder5, image: DecorationImage(image: fs.Svg(ImageConstant.img1), fit: BoxFit.cover)), child: Padding(padding: getPadding(bottom: 9), child: Text("lbl_0".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.headlineSmallSFProDisplayOnPrimaryContainer.copyWith(letterSpacing: getHorizontalSize(0.29))))), CustomImageView(svgPath: ImageConstant.imgClose, height: getVerticalSize(20), width: getHorizontalSize(24), margin: getMargin(left: 57, top: 14, bottom: 17))]))]))]))))); } 


/// Navigates to the previous screen.
///
/// This function takes a [BuildContext] object as a parameter, which is
/// used to build the navigation stack. When the action is triggered, this
/// function uses the [NavigatorService] to navigate to the previous screen
/// in the navigation stack.
onTapArrowleft53(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the emitirFourScreen when the action is triggered.
///
/// The [BuildContext] parameter is used to build the navigation stack.
/// When the action is triggered, this function uses the `NavigatorService`
/// to push the named route for the emitirFourScreen.
onTapConfirmar(BuildContext context) { NavigatorService.pushNamed(AppRoutes.emitirFourScreen, ); } 
 }
